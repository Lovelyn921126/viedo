<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<import resource="config" />
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:env/${profiles.active}/config.properties</value>
			</list>
		</property>
	</bean>
    <!--spring 方法级参数验证  -->
    <bean
        class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
    </bean>
	<context:component-scan base-package="com.ultrapower.viedo.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!--注解扫描路径  -->
  
     <!--   配置数据源  -->
    <bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
      <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
      <property name="poolSize" value="10"/>
      <property name="minPoolSize" value="10"/>
      <property name="maxPoolSize" value="30"/>
      <property name="borrowConnectionTimeout" value="60"/>
      <property name="reapTimeout" value="20"/>
      <property name="maxIdleTime" value="60"/>
      <property name="maintenanceInterval" value="60"/>
      <property name="testQuery">
        <value>select 1</value>
      </property>
    </bean>
      <!--   配置数据源  -->
    <bean id="dataSourceOne" parent="abstractXADataSource">
      <property name="uniqueResourceName" value="dataSourceOne"/>
      <property name="xaProperties">
         <props>
            <prop key="URL">${databaseurl}</prop>
            <prop key="user">${databaseusername}</prop>
            <prop key="password">${databasepassword}</prop>
         </props>
      </property>
    </bean>
     <!--   配置数据源  -->
    <bean id="dataSourceTwo" parent="abstractXADataSource">
      <property name="uniqueResourceName" value="dataSourceTwo"/>
      <property name="xaProperties">
         <props>
            <prop key="URL">${databaseurlSlave}</prop>
            <prop key="user">${databaseusernameSlave}</prop>
            <prop key="password">${databasepasswordSlave}</prop>
         </props>
      </property>
    </bean>
     <!--   配置分布式事务 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
      <property name="forceShutdown" value="false"/>
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
      <property name="transactionTimeout" value="300000"/>
    </bean>
    <bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
      <property name="transactionManager">
       <ref bean="atomikosTransactionManager"/>
      </property>
      <property name="userTransaction">
        <ref bean="atomikosUserTransaction"/>
      </property>
      <property name="allowCustomIsolationLevels" value="true"/>
    </bean> 
    <aop:aspectj-autoproxy/>
    <aop:config proxy-target-class="true">
      <aop:pointcut expression="execution(* com.ultrapower.viedo.service..*(..))" id="txPoint"/>
      <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="springTransactionManager">
       <tx:attributes>
        <tx:method name="add*" propagation="REQUIRED" read-only="true"/>
        <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
       </tx:attributes>
    </tx:advice>
     <!--    mybatis的相关配置 -->
   
    <bean id="sqlsessionFactoryOne" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSourceOne"/>
      <property name="configLocation" value="classpath:myBatis.xml"/>
      <property name="mapperLocations" value="classpath*:com/ultrapower/viedo/dao/one/*Mapper.xml" />
		<property name="plugins">
			<list>
				<bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
					<property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></property>
				</bean>
			</list>
		</property>
    </bean>
     <bean id="sqlsessionFactoryTwo" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSourceTwo"/>
      <property name="configLocation" value="classpath:myBatis.xml"/>
      <property name="mapperLocations" value="classpath*:com/ultrapower/viedo/dao/two/*Mapper.xml" />
        <property name="plugins">
            <list>
                <bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
                    <property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></property>
                </bean>
            </list>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlsessionFactoryOne" />
		<property name="basePackage" value="com.ultrapower.viedo.dao.one"></property>
	</bean>
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlsessionFactoryTwo" />
        <property name="basePackage" value="com.ultrapower.viedo.dao.two"></property>
    </bean>
</beans> 