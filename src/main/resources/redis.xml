<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- <import resource="config" /> -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:env/${profiles.active}/config.properties</value>
			</list>
		</property>
	</bean>
   <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
     <property name="maxTotal" value="${redis.maxActive}"/>
     <property name="maxIdle" value="${redis.maxIdle}"/>
     <property name="testOnBorrow" value="${redis.testOnBorrow}"/>  
   </bean>
   <bean id="jedisCoonectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
     <property name="hostName" value="${redis.host}"/>
     <property name="poolConfig" ref="poolConfig"/>
     <property name="port" value="${redis.port}"/>  
   </bean>
    
    <bean id="redisTemple" class="org.springframework.data.redis.core.RedisTemplate">
      <property name="keySerializer" >
        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
      </property>
      <property name="valueSerializer">
       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
      </property>
      <property name="hashKeySerializer">
       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
      </property>
       <property name="hashValueSerializer">
       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
      </property>
      <property name="enableTransactionSupport" value="true"/>
    </bean>
    <bean class="com.ultrapower.viedo.utils.cache.RedisUtils">
     <property name="redisTemplate" ref="redisTemple"/>
    </bean>
     <!-- disruptor -->
     <!-- eventQueue -->
    <bean id="productEventQueue" class="com.ultrapower.viedo.disruptor.EventQueue">
      <property name="maxBakSize" value="20000000"/>
      <property name="queueName"  value="productWait"/>
      <property name="processingErrorRetryCount" value="2"/>
      <property name="redisTemplate" ref="redisTemple"/>
    </bean>
    <bean id="productEventHandle" class="com.ultrapower.viedo.disruptor.ProductEventHandler">
     <property name="eventQueue" ref="productEventQueue"/>
    </bean>
    
    <bean id="productEventWork" class="com.ultrapower.viedo.disruptor.EventWorker" init-method="init" destroy-method="stop">
      <property name="ringBufferSize" value="4096"/>
      <property name="threadPoolSize" value="256"/>
      <property name="enentHandleMap">
        <map>
          <entry value-ref="productEventHandle" key-ref="productEventQueue"/>
        </map>
      </property>
    </bean>
    
    
    
</beans>